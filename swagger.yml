swagger: '2.0'
info:
  title: 'Discourse API'
  description: 'Move your app forward with the Discourse API'
  version: 1.0.0
host: discourse.example.com
schemes:
  - https
basePath: /
produces:
  - application/json
paths:
  /categories.json:
    get:
      summary: Get a list of categories
      description: |
        The Categories endpoint returns a list of all the categories for
        your discourse site that you have access to.
      parameters: []
      tags:
        - Categories
      responses:
        '200':
          description: |
            A category_list object that contains an array of categories
          schema:
            $ref: 'definitions/categories/categories.yml'
    post:
      description: Create a new category
      parameters:
        - name: name
          in: body
          required: true
          schema:
            $ref: 'definitions/categories/new_category.yml'
      tags:
        - Categories
      responses:
        '200':
          description: category response
          schema:
            $ref: 'definitions/categories/new_category_response.yml'
  /c/{id}.json:
    get:
      description: |
        Get a single category
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: category response
          schema:
            $ref: 'definitions/categories/category_response.yml'
  /categories/{id}:
    put:
      description: |
        Update a single category
      tags:
        - Categories
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: 'definitions/categories/update_category.yml'
      responses:
        '200':
          description: update category response
          schema:
            $ref: 'definitions/categories/update_category_response.yml'
  /posts:
    post:
      description: |
        Create a new topic or a new post
      tags:
        - Topics
        - Posts
      parameters:
        - name: body
          in: body
          required: false
          schema:
            type: object
            required:
              - raw
            properties:
              title:
                type: string
                description: required if creating a new topic
              topic_id:
                type: integer
                description: required if creating a new post
              raw:
                type: string
              category:
                type: integer
                description: |
                  optional if creating a new topic,
                  ignored if creating a new post
      responses:
        '200':
          description: new topic response
          schema:
            $ref: 'definitions/topics/new_topic_response.yml'
  /posts/{id}:
    get:
      description: |
        Get a single post
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: post response
          schema:
            $ref: 'definitions/posts/get_post_response.yml'
    put:
      description: |
        Update a single post
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          schema:
            type: object
            properties:
              post[raw]:
                type: string
      responses:
        '200':
          description: update post response
          schema:
            $ref: 'definitions/posts/update_post_response.yml'
  /t/{id}.json:
    get:
      description: |
        Get a single topic
      tags:
        - Topics
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: topic response
          schema:
            $ref: 'definitions/topics/topic_response.yml'
    delete:
      description: |
        Remove a single topic
      tags:
        - Topics
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: |
            delete topic response is empty, just a status code
  /t/{slug}/{id}.json:
    put:
      description: |
        Update a single topic
      tags:
        - Topics
      parameters:
        - name: slug
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            $ref: 'definitions/topics/update_topic.yml'
      responses:
        '200':
          description: update topic response
          schema:
            $ref: 'definitions/topics/update_topic_response.yml'
  /t/{topic_id}/invite:
    post:
      description: |
        Invite user to topic
      tags:
        - Invites
        - Topics
      parameters:
        - name: topic_id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
      responses:
        '200':
          description: invite response
          schema:
            $ref: 'definitions/topics/invite.yml'
  /topics/private-messages/{username}.json:
    get:
      description: |
        Get a list of private messages for a user
      tags:
        - Private Messages
      responses:
        '200':
          description: response
  /notifications.json:
    get:
      description: |
        Get some notifications
      tags:
        - Notifications
      responses:
        '200':
          description: response
  /invites:
    post:
      description: |
        Invite a user by email to join your Discourse forum
      tags:
        - Invites
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
              group_names:
                type: string
              custom_message:
                type: string
      responses:
        '200':
          description: response
          schema:
            type: object
            properties:
              success:
                type: string
  /invites/disposable:
    post:
      description: |
        Create disposable invite token
      tags:
        - Invites
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
              email:
                type: string
              quantity:
                type: integer
              group_names:
                type: string
      responses:
        '200':
          description: disposable invites response
          schema:
            type: array
            items:
              type: string
        '429':
          description: rate limit response
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
              error_type:
                type: string
  /users:
    get:
      description: |
        Get a single user by username
      tags:
        - Users
      parameters:
        - name: username
          in: path
          required: true
          type: string
      responses:
        '200':
          description: get user response
          schema:
            $ref: 'definitions/users/get_user_response.yml'
    post:
      description: |
        Creates a new user
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            $ref: 'definitions/users/new_user.yml'
      responses:
        '200':
          description: new user response
          schema:
            $ref: 'definitions/users/new_user_response.yml'
  /tags/{tag}:
    get:
      description: |
        Get a specific tag
      tags:
        - Tags
      parameters:
        - name: tag
          in: path
          required: true
          type: string
      responses:
        '200':
          description: |
            tag response
  /search/query:
    get:
      description: |
        Search for something
      tags:
        - Search
      parameters:
        - name: term
          in: path
          required: true
          type: string
        - name: include_blurbs
          in: path
          required: false
          type: boolean
      responses:
        '200':
          description: search response
          schema:
            $ref: 'definitions/search/query_response.yml'
  /admin/users/{id}/suspend:
    put:
      description: |
        Suspend a user
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: empty response body
  /admin/users/{id}/unsuspend:
    put:
      description: |
        Unsuspend a user
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: empty response body
  /admin/users/{id}/activate:
    put:
      description: |
        Activate a user
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: activate user response
          schema:
            type: object
            properties:
              success:
                type: string
  /admin/users/list/{flag}.json:
    get:
      description: |
        returns a list of users
      tags:
        - Admin
        - Users
      parameters:
        - name: flag
          in: path
          required: true
          type: string
          enum:
            - active
            - new
            - staff
            - suspended
            - blocked
            - suspect
      responses:
        '200':
          description: list of users response
          schema:
            $ref: 'definitions/users/list.yml'
  /admin/groups.json:
    get:
      description: |
        Get some groups
      tags:
        - Admin
        - Groups
      responses:
        '200':
          description: groups response
          schema:
            $ref: 'definitions/groups/get_groups_response.yml'
  /admin/groups:
    post:
      description: |
        Create a group
      tags:
        - Admin
        - Groups
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        '200':
          description: create group response
          schema:
            $ref: 'definitions/groups/new_group_response.yml'
  /admin/groups/{group_id}.json:
    delete:
      description: |
        Delete a group
      tags:
        - Admin
        - Groups
      responses:
        '200':
          description: delete group response
          schema:
            type: object
            properties:
              success:
                type: string
  /groups/{group_name}/members.json:
    get:
      description: |
        Get some group members
      tags:
        - Admin
        - Groups
      responses:
        '200':
          description: group members response
          schema:
            $ref: 'definitions/groups/group_members_response.yml'
  /groups/{group_id}/members.json:
    put:
      description: |
        Add users to a group (comma separated)
      tags:
        - Admin
        - Groups
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - usernames
            properties:
              usernames:
                type: string
      responses:
        '200':
          description: |
            add user to group response
          schema:
            type: object
            properties:
              success:
                type: string
          
    delete:
      description: |
        Delete a user from a group
      tags:
        - Admin
        - Groups
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - user_id
            properties:
              user_id:
                type: integer
      responses:
        '200':
          description: delete user from group response
          schema:
            type: object
            properties:
              success:
                type: string
  /latest.json:
    get:
      description: |
        Get the latest topics
      tags:
        - Topics
      parameters:
        - name: order
          in: path
          required: false
          type: string
          enum:
            - default
            - created
            - activity
            - views
            - posts
            - category
      responses:
        '200':
          description: latest topics response
          schema:
            $ref: 'definitions/topics/latest_topics_response.yml'
