swagger: '2.0'
info:
  title: 'Discourse API Documentation'
  description: |
    Documentation on how to use Discourse through API calls.

    ### Authentication

    Some endpoints do not require any authentication, pretty much anything else will
    require you to be authenticated.

    To become authenticated you will need to create an API Key from the admin panel.

    Once you have your API Key you can pass it in as a GET url parameter like this:
    
    ```
    curl -X GET "http://127.0.0.1:3000/admin/users/list/active.json?api_key=714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19&api_username=discourse1"
    ```

    If you are making a POST request you can pass them in the body:

    ```
    curl -X POST "Content-Type: multipart/form-data;" -F "api_key=714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19" -F "api_username=discourse1" -F "name=89853c20-4409-e91a-a8ea-f6cdff96aaaa" -F "color=49d9e9" -F "text_color=f0fcfd" "http://127.0.0.1:3000/categories"
    ```
  version: latest
host: discourse.example.com
schemes:
  - https
basePath: /
produces:
  - application/json
paths:
  /categories.json:
    get:
      summary: Get a list of categories
      description: |
        The Categories endpoint returns a list of all the categories for
        your discourse site that you have access to.
      parameters: []
      tags:
        - Categories
      responses:
        '200':
          description: |
            A category_list object that contains an array of categories
          schema:
            $ref: 'definitions/categories/categories.yml'
    post:
      description: Create a new category
      parameters:
        - name: name
          in: body
          required: true
          schema:
            $ref: 'definitions/categories/new_category.yml'
      tags:
        - Categories
      responses:
        '200':
          description: category response
          schema:
            $ref: 'definitions/categories/new_category_response.yml'
  /c/{id}.json:
    get:
      description: |
        Get a single category
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: category response
          schema:
            $ref: 'definitions/categories/category_response.yml'
  /categories/{id}:
    put:
      description: |
        Update a single category
      tags:
        - Categories
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: 'definitions/categories/update_category.yml'
      responses:
        '200':
          description: update category response
          schema:
            $ref: 'definitions/categories/update_category_response.yml'
  /posts:
    post:
      description: |
        Create a new topic or a new post
      tags:
        - Topics
        - Posts
      parameters:
        - name: body
          in: body
          required: false
          schema:
            type: object
            required:
              - raw
            properties:
              title:
                type: string
                description: required if creating a new topic
              topic_id:
                type: integer
                description: required if creating a new post
              raw:
                type: string
              category:
                type: integer
                description: |
                  optional if creating a new topic,
                  ignored if creating a new post
      responses:
        '200':
          description: new topic response
          schema:
            $ref: 'definitions/topics/new_topic_response.yml'
  /posts/{id}:
    get:
      description: |
        Get a single post
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: post response
          schema:
            $ref: 'definitions/posts/get_post_response.yml'
    put:
      description: |
        Update a single post
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          schema:
            type: object
            properties:
              post[raw]:
                type: string
      responses:
        '200':
          description: update post response
          schema:
            $ref: 'definitions/posts/update_post_response.yml'
  /post_actions:
    post:
      description: |
        Like a post and other actions
      tags:
        - Posts
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - id
              - post_action_type_id
            properties:
              id:
                type: integer
              post_action_type_id:
                type: integer
              flag_topic:
                type: boolean
  /post_actions/{id}:
    delete:
      description: |
        Un-like a post
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          schema:
            type: object
            required:
              - post_action_type_id
            properties:
              post_action_type_id:
                type: integer
  /t/{id}.json:
    get:
      description: |
        Get a single topic
      tags:
        - Topics
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: topic response
          schema:
            $ref: 'definitions/topics/topic_response.yml'
    delete:
      description: |
        Remove a single topic
      tags:
        - Topics
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: |
            delete topic response is empty, just a status code
  /t/{slug}/{id}.json:
    put:
      description: |
        Update a single topic
      tags:
        - Topics
      parameters:
        - name: slug
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            $ref: 'definitions/topics/update_topic.yml'
      responses:
        '200':
          description: update topic response
          schema:
            $ref: 'definitions/topics/update_topic_response.yml'
  /t/{topic_id}/invite:
    post:
      description: |
        Invite user to topic
      tags:
        - Invites
        - Topics
      parameters:
        - name: topic_id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
      responses:
        '200':
          description: invite response
          schema:
            $ref: 'definitions/topics/invite.yml'
  /topics/private-messages/{username}.json:
    get:
      description: |
        Get a list of private messages for a user
      tags:
        - Private Messages
      responses:
        '200':
          description: list of private messages response
          schema:
            $ref: 'definitions/topics/private-messages.yml'
  /topics/private-messages-sent/{username}.json:
    get:
      description: |
        Get a list of private messages sent
      tags:
        - Private Messages
      responses:
        '200':
          description: private messages sent response
          schema:
            $ref: 'definitions/topics/private-messages-sent.yml'
  /notifications.json:
    get:
      description: |
        Get some notifications
      tags:
        - Notifications
      responses:
        '200':
          description: notifications response
          schema:
            $ref: 'definitions/notifications/get.yml'
  /invites:
    post:
      description: |
        Invite a user by email to join your Discourse forum
      tags:
        - Invites
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
              group_names:
                type: string
              custom_message:
                type: string
      responses:
        '200':
          description: response
          schema:
            type: object
            properties:
              success:
                type: string
  /invites/disposable:
    post:
      description: |
        Create disposable invite token
      tags:
        - Invites
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
              email:
                type: string
              quantity:
                type: integer
              group_names:
                type: string
      responses:
        '200':
          description: disposable invites response
          schema:
            type: array
            items:
              type: string
        '429':
          description: rate limit response
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
              error_type:
                type: string
  /users/{username}.json:
    get:
      description: |
        Get a single user by username
      tags:
        - Users
      parameters:
        - name: username
          in: path
          required: true
          type: string
      responses:
        '200':
          description: get user response
          schema:
            $ref: 'definitions/users/get_user_response.yml'
  /users:
    post:
      description: |
        Creates a new user
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            $ref: 'definitions/users/new_user.yml'
      responses:
        '200':
          description: new user response
          schema:
            $ref: 'definitions/users/new_user_response.yml'
  /tags:
    get:
      description: |
        get a list of tags (requires the tag plugin)
      tags:
        - Tags
      responses:
        '200':
          description: |
            tag list response
  /tags/{tag}:
    get:
      description: |
        Get a specific tag (requires the tag plugin)
      tags:
        - Tags
      parameters:
        - name: tag
          in: path
          required: true
          type: string
      responses:
        '200':
          description: |
            tag response
  /search/query:
    get:
      description: |
        Search for something
      tags:
        - Search
      parameters:
        - name: term
          in: path
          required: true
          type: string
        - name: include_blurbs
          in: path
          required: false
          type: boolean
      responses:
        '200':
          description: search response
          schema:
            $ref: 'definitions/search/query_response.yml'
  /admin/users/{id}/suspend:
    put:
      description: |
        Suspend a user
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: empty response body
  /admin/users/{id}/unsuspend:
    put:
      description: |
        Unsuspend a user
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: empty response body
  /admin/users/{id}/activate:
    put:
      description: |
        Activate a user
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: activate user response
          schema:
            type: object
            properties:
              success:
                type: string
  /admin/users/{id}/generate_api_key:
    post:
      description: |
        Generate/Regenerate api_key for a user
      tags:
        - Admin
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: generate api key response
          schema:
            $ref: 'definitions/admin/generate_api_key.yml'
  /admin/users/list/{flag}.json:
    get:
      description: |
        returns a list of users
      tags:
        - Admin
        - Users
      parameters:
        - name: flag
          in: path
          required: true
          type: string
          enum:
            - active
            - new
            - staff
            - suspended
            - blocked
            - suspect
      responses:
        '200':
          description: list of users response
          schema:
            $ref: 'definitions/users/list.yml'
  /admin/groups.json:
    get:
      description: |
        Get some groups
      tags:
        - Admin
        - Groups
      responses:
        '200':
          description: groups response
          schema:
            $ref: 'definitions/groups/get_groups_response.yml'
  /admin/groups:
    post:
      description: |
        Create a group
      tags:
        - Admin
        - Groups
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        '200':
          description: create group response
          schema:
            $ref: 'definitions/groups/new_group_response.yml'
  /admin/groups/{group_id}.json:
    delete:
      description: |
        Delete a group
      tags:
        - Admin
        - Groups
      responses:
        '200':
          description: delete group response
          schema:
            type: object
            properties:
              success:
                type: string
  /groups/{group_name}/members.json:
    get:
      description: |
        Get some group members
      tags:
        - Admin
        - Groups
      responses:
        '200':
          description: group members response
          schema:
            $ref: 'definitions/groups/group_members_response.yml'
  /groups/{group_id}/members.json:
    put:
      description: |
        Add users to a group (comma separated)
      tags:
        - Admin
        - Groups
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - usernames
            properties:
              usernames:
                type: string
      responses:
        '200':
          description: |
            add user to group response
          schema:
            type: object
            properties:
              success:
                type: string
          
    delete:
      description: |
        Delete a user from a group
      tags:
        - Admin
        - Groups
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - user_id
            properties:
              user_id:
                type: integer
      responses:
        '200':
          description: delete user from group response
          schema:
            type: object
            properties:
              success:
                type: string
  /latest.json:
    get:
      description: |
        Get the latest topics
      tags:
        - Topics
      parameters:
        - name: order
          in: path
          required: false
          type: string
          enum:
            - default
            - created
            - activity
            - views
            - posts
            - category
      responses:
        '200':
          description: latest topics response
          schema:
            $ref: 'definitions/topics/latest_topics_response.yml'
  /top.json:
    get:
      description: |
        Get the top topics
      tags:
        - Topics
      responses:
        '200':
          description: top topics response
          schema:
            $ref: 'definitions/topics/top.yml'
  /top/{flag}.json:
    get:
      description: |
        Get the top topics filtered by specified flag
      tags:
        - Topics
      parameters:
        - name: flag
          in: path
          required: false
          type: string
          enum:
            - all
            - yearly
            - quarterly
            - monthly
            - weekly
            - daily
  /session/forgot_password:
    post:
      description: |
        Send password reset email
      tags:
        - Password Reset
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - login
            properties:
              login:
                type: string
      responses:
        '200':
          description: |
            send password reset email response
          schema:
            type: object
            properties:
              result:
                type: string
              user_found:
                type: boolean
  /users/password-reset/{token}:
    put:
      description: |
        create a new password
      tags:
        - Password Reset
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        '200':
          description: |
            password has been reset response
  /admin/site_settings.json:
    get:
      description: |
        show site settings
      tags:
        - Admin
      responses:
        '200':
          description: show site settings response
          schema:
            $ref: 'definitions/admin/site_settings.yml'
  /admin/site_settings/title:
    put:
      description: |
        Update the site title
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - title
            properties:
              title:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/site_description:
    put:
      description: |
        Update the site description
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - site_description
            properties:
              site_description:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/contact_email:
    put:
      description: |
        Update the contact email
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - contact_email
            properties:
              contact_email:
                type: string
      responses:
        '200':
          description: |
            empty response body
        '422':
          description: |
            Invalid email address
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: string
  /admin/site_settings/contact_url:
    put:
      description: |
        Update the contact url
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - contact_url
            properties:
              contact_url:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/notification_email:
    put:
      description: |
        Update the notification email
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - notification_email
            properties:
              notification_email:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/site_contact_username:
    put:
      description: |
        Update the site contact username
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - site_contact_username
            properties:
              site_contact_username:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/logo_url:
    put:
      description: |
        Update logo url
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - logo_url
            properties:
              logo_url:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/logo_small_url:
    put:
      description: |
        Update the small logo url
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - logo_small_url
            properties:
              logo_small_url:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/digest_logo_url:
    put:
      description: |
        Update the digest logo url
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - digest_logo_url
            properties:
              digest_logo_url:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/mobile_logo_url:
    put:
      description: |
        Update the mobile logo url
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - mobile_logo_url
            properties:
              mobile_logo_url:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/favicon_url:
    put:
      description: |
        Update the favicon url
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - favicon_url
            properties:
              favicon_url:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/apple_touch_icon_url:
    put:
      description: |
        Update the apple touch icon url
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - apple_touch_icon_url
            properties:
              apple_touch_icon_url:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/default_opengraph_image_url:
    put:
      description: |
        Update the default opengraph image url
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - default_opengraph_image_url
            properties:
              default_opengraph_image_url:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/twitter_summary_large_image_url:
    put:
      description: |
        Update the twitter summary large image url
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - twitter_summary_large_image_url
            properties:
              twitter_summary_large_image_url:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/exclude_rel_nofollow_domains:
    put:
      description: |
        Update the exclude rel nofollow domains
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - exclude_rel_nofollow_domains
            properties:
              exclude_rel_nofollow_domains:
                description: |
                  pipe delimited
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/company_short_name:
    put:
      description: |
        Update the company short name
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - company_short_name
            properties:
              company_short_name:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/company_full_name:
    put:
      description: |
        Update the company full name
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - company_full_name
            properties:
              company_full_name:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/company_domain:
    put:
      description: |
        Update the company domain
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - company_domain
            properties:
              company_domain:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/default_locale:
    put:
      description: |
        Update the default locale
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - default_locale
            properties:
              default_locale:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/allow_user_locale:
    put:
      description: |
        Update allow user locale
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - allow_user_locale
            properties:
              allow_user_locale:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/set_locale_from_accept_language_header:
    put:
      description: |
        Update set locale from accept language header
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - set_locale_from_accept_language_header
            properties:
              set_locale_from_accept_language_header:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/categories_topics:
    put:
      description: |
        Update the number of topics to show
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - categories_topics
            properties:
              categories_topics:
                type: integer
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/suggested_topics:
    put:
      description: |
        Update the number of suggested topics
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - suggested_topics
            properties:
              suggested_topics:
                type: integer
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/limit_suggested_to_category:
    put:
      description: |
        Update show topics from the current category
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - limit_suggested_to_category
            properties:
              limit_suggested_to_category:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/suggested_topics_max_days_old:
    put:
      description: |
        Update suggested topics max days old
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - suggested_topics_max_days_old
            properties:
              suggested_topics_max_days_old:
                type: integer
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/track_external_right_clicks:
    put:
      description: |
        Update track external right clicks
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - track_external_right_clicks
            properties:
              track_external_right_clicks:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/ga_universal_tracking_code:
    put:
      description: |
        Update Google Universal Analytics tracking code
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - ga_universal_tracking_code
            properties:
              ga_universal_tracking_code:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/ga_universal_domain_name:
    put:
      description: |
        Update Google Universal Analytics domain name
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - ga_universal_domain_name
            properties:
              ga_universal_domain_name:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/ga_tracking_code:
    put:
      description: |
        Update the OBSOLETE ga tracking code
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - ga_tracking_code
            properties:
              ga_tracking_code:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/ga_domain_name:
    put:
      description: |
        Update the OBSOLETE ga domain name
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - ga_domain_name
            properties:
              ga_domain_name:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/gtm_container_id:
    put:
      description: |
        Update Google Tag Manager container id
      tags:
        - Admin
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - gtm_container_id
            properties:
              gtm_container_id:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/top_menu:
    put:
      description: |
        Update the homepage navigation
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - top_menu
            properties:
              top_menu:
                description: pipe delimited
                example: latest|new|unread|top|categories|read
                type: string
                enum:
                  - latest
                  - new
                  - unread
                  - top
                  - categories
                  - read
                  - posted
                  - bookmarks
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/post_menu:
    put:
      description: |
        Update the post menu items
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - post_menu
            properties:
              post_menu:
                description: pipe delimited
                example: like|edit|flag|delete|share|bookmark|reply
                type: string
                enum:
                  - like-count
                  - like
                  - share
                  - flag
                  - edit
                  - bookmark
                  - delete
                  - admin
                  - reply
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/post_menu_hidden_items:
    put:
      description: |
        Update the post menu hidden items
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - post_menu_hidden_items
            properties:
              post_menu_hidden_items:
                description: pipe delimited
                example: like|edit|flag|delete|share|bookmark|reply
                type: string
                enum:
                  - like
                  - share
                  - flag
                  - edit
                  - bookmark
                  - delete
                  - admin
                  - reply
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/desktop_category_page_style:
    put:
      description: |
        Update the visual style for the /categories page
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - desktop_category_page_style
            properties:
              desktop_category_page_style:
                type: string
                enum:
                  - categories_only
                  - categories_with_featured_topics
                  - categories_and_latest_topics
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/category_colors:
    put:
      description: |
        Update a list of hexadecimal color values
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - category_colors
            properties:
              category_colors:
                description: pipe delimited
                example: BF1E2E|F1592A|F7941D
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/category_style:
    put:
      description: |
        Update the category style
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - category_style
            properties:
              category_style:
                type: string
                enum:
                  - bar
                  - box
                  - bullet
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/enable_mobile_theme:
    put:
      description: |
        Update enable mobile theme
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - enable_mobile_theme
            properties:
              enable_mobile_theme:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/relative_date_duration:
    put:
      description: |
        Update relative date duration
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - relative_date_duration
            properties:
              relative_date_duration:
                type: integer
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/fixed_category_positions:
    put:
      description: |
        Update fixed category positions
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - fixed_category_positions
            properties:
              fixed_category_positions:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/fixed_category_positions_on_create:
    put:
      description: |
        Update fixed category positions on create
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - fixed_category_positions_on_create
            properties:
              fixed_category_positions_on_create:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/show_subcategory_list:
    put:
      description: |
        Update show subcategory list
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - show_subcategory_list
            properties:
              show_subcategory_list:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/enable_badges:
    put:
      description: |
        Update enable the badge system
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - enable_badges
            properties:
              enable_badges:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/enable_whispers:
    put:
      description: |
        Update enable whispers
      tags:
        - Admin
        - Site Settings
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - enable_whispers
            properties:
              enable_whispers:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/invite_only:
    put:
      description: |
        Update invite only
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - invite_only
            properties:
              invite_only:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/login_required:
    put:
      description: |
        Update login required
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - login_required
            properties:
              login_required:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/must_approve_users:
    put:
      description: |
        Update must approve users
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - must_approve_users
            properties:
              must_approve_users:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/enable_local_logins:
    put:
      description: |
        Update enable_local_logins
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - enable_local_logins
            properties:
              enable_local_logins:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/allow_new_registrations:
    put:
      description: |
        Update allow new registrations
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - allow_new_registrations
            properties:
              allow_new_registrations:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/enable_signup_cta:
    put:
      description: |
        Update enable signup cta
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - enable_signup_cta
            properties:
              enable_signup_cta:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/enable_google_oauth2_logins:
    put:
      description: |
        Update enable Google Oauth2 authentication
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - enable_google_oath2_logins
            properties:
              enable_google_oath2_logins:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/google_oath2_client_id:
    put:
      description: |
        Update google oauth2 client id
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - google_oath2_client_id
            properties:
              google_oath2_client_id:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/google_oath2_client_secret:
    put:
      description: |
        Update google oauth2 client secret
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - google_oath2_client_secret
            properties:
              google_oath2_client_secret:
                type: string
      responses:
        '200':
          description: |
            empty response body
  /admin/site_settings/enable_yahoo_logins:
    put:
      description: |
        Update enable yahoo logins
      tags:
        - Admin
        - Site Settings Login
      parameters:
        - name: body
          in: body
          schema:
            type: object
            required:
              - enable_yahoo_logins
            properties:
              enable_yahoo_logins:
                type: boolean
      responses:
        '200':
          description: |
            empty response body
